{"ast":null,"code":"var _jsxFileName = \"D:\\\\versionnew\\\\project\\\\deloitte-chatbot\\\\src\\\\components\\\\ChatInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport SpeechRecognition from './SpeechRecognition';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  onLogout,\n  userRole\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const endOfMessagesRef = useRef(null);\n  const speechSynthRef = useRef(window.speechSynthesis);\n  useEffect(() => {\n    const welcomeMessage = {\n      text: \"Hello! I'm your Deloitte well-being assistant. How are you feeling today?\",\n      sender: 'bot',\n      timestamp: new Date().toISOString()\n    };\n    setMessages([welcomeMessage]);\n  }, []);\n  useEffect(() => {\n    var _endOfMessagesRef$cur;\n    (_endOfMessagesRef$cur = endOfMessagesRef.current) === null || _endOfMessagesRef$cur === void 0 ? void 0 : _endOfMessagesRef$cur.scrollIntoView({\n      behavior: 'smooth'\n    });\n    const latestMessage = messages[messages.length - 1];\n    if (latestMessage && latestMessage.sender === 'bot') {\n      speakText(latestMessage.text);\n    }\n  }, [messages]);\n  const speakText = text => {\n    if (!text) return;\n    speechSynthRef.current.cancel();\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.rate = 1.0;\n    utterance.pitch = 1.0;\n    utterance.volume = 1.0;\n    const voices = speechSynthRef.current.getVoices();\n    const preferredVoice = voices.find(voice => voice.name.includes('Daniel') || voice.name.includes('Samantha') || voice.lang === 'en-US');\n    if (preferredVoice) {\n      utterance.voice = preferredVoice;\n    }\n    utterance.onstart = () => setIsSpeaking(true);\n    utterance.onend = () => setIsSpeaking(false);\n    speechSynthRef.current.speak(utterance);\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    await sendMessage(input);\n  };\n  const handleSpeechResult = async transcript => {\n    setInput(transcript);\n    await sendMessage(transcript);\n  };\n  const sendMessage = async messageText => {\n    // Add user message to chat\n    const userMessage = {\n      text: messageText,\n      sender: 'user',\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsTyping(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: messageText\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setTimeout(() => {\n        const botMessage = {\n          text: data.response,\n          sender: 'bot',\n          timestamp: new Date().toISOString()\n        };\n        setMessages(prev => [...prev, botMessage]);\n        setIsTyping(false);\n      }, 1000);\n    } catch (error) {\n      console.error('Error:', error);\n      setTimeout(() => {\n        const errorMessage = {\n          text: \"I'm sorry, I'm having trouble connecting to the server. Please try again later.\",\n          sender: 'bot',\n          timestamp: new Date().toISOString()\n        };\n        setMessages(prev => [...prev, errorMessage]);\n        setIsTyping(false);\n      }, 1000);\n    }\n  };\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const handleSpeakMessage = text => {\n    speakText(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/deloitte-logo.png\",\n          alt: \"Deloitte Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Deloitte Well-being Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [userRole === 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dashboard-btn\",\n          onClick: () => window.location.href = '/dashboard',\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'user' ? 'user-message' : 'bot-message'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timestamp\",\n              children: formatTime(message.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), message.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"speak-button\",\n              onClick: () => handleSpeakMessage(message.text),\n              disabled: isSpeaking,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-volume-up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content typing\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: endOfMessagesRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"text-input\",\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message here...\",\n          disabled: isTyping\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isTyping || !input.trim(),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M22 2L11 13\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M22 2L15 22L11 13L2 9L22 2Z\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SpeechRecognition, {\n        onSpeechResult: handleSpeechResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"sdLc6sOhM+kd1sGA567iOhYBipY=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SpeechRecognition","jsxDEV","_jsxDEV","ChatInterface","onLogout","userRole","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","isSpeaking","setIsSpeaking","endOfMessagesRef","speechSynthRef","window","speechSynthesis","welcomeMessage","text","sender","timestamp","Date","toISOString","_endOfMessagesRef$cur","current","scrollIntoView","behavior","latestMessage","length","speakText","cancel","utterance","SpeechSynthesisUtterance","rate","pitch","volume","voices","getVoices","preferredVoice","find","voice","name","includes","lang","onstart","onend","speak","handleSendMessage","e","preventDefault","trim","sendMessage","handleSpeechResult","transcript","messageText","userMessage","prev","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","setTimeout","botMessage","error","console","errorMessage","formatTime","date","toLocaleTimeString","hour","minute","handleSpeakMessage","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","href","map","index","disabled","ref","onSubmit","type","value","onChange","target","placeholder","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","onSpeechResult","_c","$RefreshReg$"],"sources":["D:/versionnew/project/deloitte-chatbot/src/components/ChatInterface.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport SpeechRecognition from './SpeechRecognition';\r\nimport './ChatInterface.css';\r\n\r\nconst ChatInterface = ({ onLogout, userRole }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const endOfMessagesRef = useRef(null);\r\n  const speechSynthRef = useRef(window.speechSynthesis);\r\n  \r\n  useEffect(() => {\r\n    const welcomeMessage = {\r\n      text: \"Hello! I'm your Deloitte well-being assistant. How are you feeling today?\",\r\n      sender: 'bot',\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    setMessages([welcomeMessage]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    endOfMessagesRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    \r\n    const latestMessage = messages[messages.length - 1];\r\n    if (latestMessage && latestMessage.sender === 'bot') {\r\n      speakText(latestMessage.text);\r\n    }\r\n  }, [messages]);\r\n  \r\n  const speakText = (text) => {\r\n    if (!text) return;\r\n    \r\n    speechSynthRef.current.cancel();\r\n    \r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    \r\n    utterance.rate = 1.0;\r\n    utterance.pitch = 1.0;\r\n    utterance.volume = 1.0;\r\n    \r\n    const voices = speechSynthRef.current.getVoices();\r\n    const preferredVoice = voices.find(voice => \r\n      voice.name.includes('Daniel') || \r\n      voice.name.includes('Samantha') || \r\n      voice.lang === 'en-US'\r\n    );\r\n    \r\n    if (preferredVoice) {\r\n      utterance.voice = preferredVoice;\r\n    }\r\n    \r\n    utterance.onstart = () => setIsSpeaking(true);\r\n    utterance.onend = () => setIsSpeaking(false);\r\n    \r\n    speechSynthRef.current.speak(utterance);\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    \r\n    await sendMessage(input);\r\n  };\r\n  \r\n  const handleSpeechResult = async (transcript) => {\r\n    setInput(transcript);\r\n    await sendMessage(transcript);\r\n  };\r\n  \r\n  const sendMessage = async (messageText) => {\r\n    // Add user message to chat\r\n    const userMessage = {\r\n      text: messageText,\r\n      sender: 'user',\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInput('');\r\n    setIsTyping(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ message: messageText }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      setTimeout(() => {\r\n        const botMessage = {\r\n          text: data.response,\r\n          sender: 'bot',\r\n          timestamp: new Date().toISOString()\r\n        };\r\n        setMessages(prev => [...prev, botMessage]);\r\n        setIsTyping(false);\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      \r\n      setTimeout(() => {\r\n        const errorMessage = {\r\n          text: \"I'm sorry, I'm having trouble connecting to the server. Please try again later.\",\r\n          sender: 'bot',\r\n          timestamp: new Date().toISOString()\r\n        };\r\n        setMessages(prev => [...prev, errorMessage]);\r\n        setIsTyping(false);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const formatTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n  \r\n  const handleSpeakMessage = (text) => {\r\n    speakText(text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"logo\">\r\n          <img src=\"/deloitte-logo.png\" alt=\"Deloitte Logo\" />\r\n          <h1>Deloitte Well-being Assistant</h1>\r\n        </div>\r\n        <div className=\"header-actions\">\r\n          {userRole === 'admin' && (\r\n            <button className=\"dashboard-btn\" onClick={() => window.location.href = '/dashboard'}>\r\n              Dashboard\r\n            </button>\r\n          )}\r\n          <button className=\"logout-btn\" onClick={onLogout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"messages-container\">\r\n        {messages.map((message, index) => (\r\n          <div \r\n            key={index} \r\n            className={`message ${message.sender === 'user' ? 'user-message' : 'bot-message'}`}\r\n          >\r\n            <div className=\"message-content\">\r\n              <p>{message.text}</p>\r\n              <div className=\"message-footer\">\r\n                <span className=\"timestamp\">{formatTime(message.timestamp)}</span>\r\n                {message.sender === 'bot' && (\r\n                  <button \r\n                    className=\"speak-button\" \r\n                    onClick={() => handleSpeakMessage(message.text)}\r\n                    disabled={isSpeaking}\r\n                  >\r\n                    <i className=\"fa fa-volume-up\"></i>\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {isTyping && (\r\n          <div className=\"message bot-message\">\r\n            <div className=\"message-content typing\">\r\n              <div className=\"typing-indicator\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div ref={endOfMessagesRef} />\r\n      </div>\r\n      \r\n      <div className=\"input-area\">\r\n        <form className=\"text-input\" onSubmit={handleSendMessage}>\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type your message here...\"\r\n            disabled={isTyping}\r\n          />\r\n          <button type=\"submit\" disabled={isTyping || !input.trim()}>\r\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M22 2L11 13\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n              <path d=\"M22 2L15 22L11 13L2 9L22 2Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n            </svg>\r\n          </button>\r\n        </form>\r\n        <SpeechRecognition onSpeechResult={handleSpeechResult} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}