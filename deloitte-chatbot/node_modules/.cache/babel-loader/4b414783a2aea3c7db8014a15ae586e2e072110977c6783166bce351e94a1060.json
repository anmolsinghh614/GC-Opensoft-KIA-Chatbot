{"ast":null,"code":"var _jsxFileName = \"D:\\\\versionnew\\\\backup\\\\project\\\\deloitte-chatbot\\\\src\\\\components\\\\SpeechRecognition.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechRecognition = ({\n  onSpeechResult\n}) => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [recognition, setRecognition] = useState(null);\n  useEffect(() => {\n    // Initialize speech recognition\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognition) {\n      const recognitionInstance = new SpeechRecognition();\n      recognitionInstance.continuous = false;\n      recognitionInstance.interimResults = false;\n      recognitionInstance.lang = 'en-US';\n      recognitionInstance.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        onSpeechResult(transcript);\n        setIsListening(false);\n      };\n      recognitionInstance.onerror = event => {\n        console.error('Speech recognition error', event.error);\n        setIsListening(false);\n      };\n      setRecognition(recognitionInstance);\n    }\n  }, [onSpeechResult]);\n  const toggleListening = () => {\n    if (isListening) {\n      recognition.stop();\n      setIsListening(false);\n    } else {\n      recognition.start();\n      setIsListening(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speech-recognition\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleListening,\n      className: `mic-button ${isListening ? 'listening' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), isListening ? 'Listening...' : 'Speak']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechRecognition, \"wjdvZtzgcUx7m0/NOJ/lx+QVJXA=\");\n_c = SpeechRecognition;\nexport default SpeechRecognition;\nvar _c;\n$RefreshReg$(_c, \"SpeechRecognition\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SpeechRecognition","onSpeechResult","_s","isListening","setIsListening","recognition","setRecognition","window","webkitSpeechRecognition","recognitionInstance","continuous","interimResults","lang","onresult","event","transcript","results","onerror","console","error","toggleListening","stop","start","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/versionnew/backup/project/deloitte-chatbot/src/components/SpeechRecognition.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SpeechRecognition = ({ onSpeechResult }) => {\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [recognition, setRecognition] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize speech recognition\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (SpeechRecognition) {\r\n      const recognitionInstance = new SpeechRecognition();\r\n      recognitionInstance.continuous = false;\r\n      recognitionInstance.interimResults = false;\r\n      recognitionInstance.lang = 'en-US';\r\n      \r\n      recognitionInstance.onresult = (event) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        onSpeechResult(transcript);\r\n        setIsListening(false);\r\n      };\r\n      \r\n      recognitionInstance.onerror = (event) => {\r\n        console.error('Speech recognition error', event.error);\r\n        setIsListening(false);\r\n      };\r\n      \r\n      setRecognition(recognitionInstance);\r\n    }\r\n  }, [onSpeechResult]);\r\n\r\n  const toggleListening = () => {\r\n    if (isListening) {\r\n      recognition.stop();\r\n      setIsListening(false);\r\n    } else {\r\n      recognition.start();\r\n      setIsListening(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"speech-recognition\">\r\n      <button \r\n        onClick={toggleListening} \r\n        className={`mic-button ${isListening ? 'listening' : ''}`}\r\n      >\r\n        <i className=\"fa fa-microphone\"></i>\r\n        {isListening ? 'Listening...' : 'Speak'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeechRecognition;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMG,iBAAiB,GAAGO,MAAM,CAACP,iBAAiB,IAAIO,MAAM,CAACC,uBAAuB;IACpF,IAAIR,iBAAiB,EAAE;MACrB,MAAMS,mBAAmB,GAAG,IAAIT,iBAAiB,CAAC,CAAC;MACnDS,mBAAmB,CAACC,UAAU,GAAG,KAAK;MACtCD,mBAAmB,CAACE,cAAc,GAAG,KAAK;MAC1CF,mBAAmB,CAACG,IAAI,GAAG,OAAO;MAElCH,mBAAmB,CAACI,QAAQ,GAAIC,KAAK,IAAK;QACxC,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACD,UAAU;QACjDd,cAAc,CAACc,UAAU,CAAC;QAC1BX,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;MAEDK,mBAAmB,CAACQ,OAAO,GAAIH,KAAK,IAAK;QACvCI,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEL,KAAK,CAACK,KAAK,CAAC;QACtDf,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;MAEDE,cAAc,CAACG,mBAAmB,CAAC;IACrC;EACF,CAAC,EAAE,CAACR,cAAc,CAAC,CAAC;EAEpB,MAAMmB,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIjB,WAAW,EAAE;MACfE,WAAW,CAACgB,IAAI,CAAC,CAAC;MAClBjB,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,MAAM;MACLC,WAAW,CAACiB,KAAK,CAAC,CAAC;MACnBlB,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,oBACEL,OAAA;IAAKwB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjCzB,OAAA;MACE0B,OAAO,EAAEL,eAAgB;MACzBG,SAAS,EAAE,cAAcpB,WAAW,GAAG,WAAW,GAAG,EAAE,EAAG;MAAAqB,QAAA,gBAE1DzB,OAAA;QAAGwB,SAAS,EAAC;MAAkB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnC1B,WAAW,GAAG,cAAc,GAAG,OAAO;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAjDIF,iBAAiB;AAAA8B,EAAA,GAAjB9B,iBAAiB;AAmDvB,eAAeA,iBAAiB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}