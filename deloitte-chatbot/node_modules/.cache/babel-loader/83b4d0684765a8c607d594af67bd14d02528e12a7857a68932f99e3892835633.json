{"ast":null,"code":"var _jsxFileName = \"D:\\\\versionnew\\\\project\\\\deloitte-chatbot\\\\src\\\\components\\\\ChatInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  onLogout,\n  userRole\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [voices, setVoices] = useState([]);\n  const endOfMessagesRef = useRef(null);\n  const speechSynthRef = useRef(window.speechSynthesis);\n\n  // Initialize speech synthesis and load voices\n  useEffect(() => {\n    // Function to load and set available voices\n    const loadVoices = () => {\n      const availableVoices = speechSynthRef.current.getVoices();\n      if (availableVoices.length > 0) {\n        setVoices(availableVoices);\n        console.log(\"Voices loaded:\", availableVoices.length);\n      }\n    };\n\n    // Load voices immediately\n    loadVoices();\n\n    // Chrome and some browsers need this event to get all voices\n    if (speechSynthRef.current.onvoiceschanged !== undefined) {\n      speechSynthRef.current.onvoiceschanged = loadVoices;\n    }\n\n    // Add welcome message\n    const welcomeMessage = {\n      text: \"Hello! I'm your Deloitte well-being assistant. How are you feeling today?\",\n      sender: 'bot',\n      timestamp: new Date().toISOString()\n    };\n    setMessages([welcomeMessage]);\n\n    // Cleanup\n    return () => {\n      if (speechSynthRef.current.speaking) {\n        speechSynthRef.current.cancel();\n      }\n    };\n  }, []);\n\n  // Scroll to bottom and speak new bot messages\n  useEffect(() => {\n    var _endOfMessagesRef$cur;\n    (_endOfMessagesRef$cur = endOfMessagesRef.current) === null || _endOfMessagesRef$cur === void 0 ? void 0 : _endOfMessagesRef$cur.scrollIntoView({\n      behavior: 'smooth'\n    });\n    const latestMessage = messages[messages.length - 1];\n    if (latestMessage && latestMessage.sender === 'bot' && !isTyping) {\n      speakText(latestMessage.text);\n    }\n  }, [messages, isTyping]);\n  const speakText = text => {\n    if (!text || voices.length === 0) return;\n\n    // Cancel any ongoing speech\n    if (speechSynthRef.current.speaking) {\n      speechSynthRef.current.cancel();\n    }\n    const utterance = new SpeechSynthesisUtterance(text);\n\n    // Configure voice settings\n    utterance.rate = 1.0;\n    utterance.pitch = 1.0;\n    utterance.volume = 1.0;\n\n    // Select a preferred voice\n    const preferredVoice = voices.find(voice => voice.name.includes('Daniel') || voice.name.includes('Samantha') || voice.lang === 'en-US');\n    if (preferredVoice) {\n      utterance.voice = preferredVoice;\n      console.log(\"Using voice:\", preferredVoice.name);\n    } else {\n      console.log(\"Using default voice\");\n    }\n    utterance.onstart = () => {\n      console.log(\"Speech started\");\n      setIsSpeaking(true);\n    };\n    utterance.onend = () => {\n      console.log(\"Speech ended\");\n      setIsSpeaking(false);\n    };\n    utterance.onerror = event => {\n      console.error(\"Speech error:\", event);\n      setIsSpeaking(false);\n    };\n    speechSynthRef.current.speak(utterance);\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: 'user',\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsTyping(true);\n    try {\n      // Send message to backend\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setTimeout(() => {\n        const botMessage = {\n          text: data.response,\n          sender: 'bot',\n          timestamp: new Date().toISOString()\n        };\n        setMessages(prev => [...prev, botMessage]);\n        setIsTyping(false);\n      }, 1000);\n    } catch (error) {\n      console.error('Error:', error);\n      setTimeout(() => {\n        const errorMessage = {\n          text: \"I'm sorry, I'm having trouble connecting to the server. Please try again later.\",\n          sender: 'bot',\n          timestamp: new Date().toISOString()\n        };\n        setMessages(prev => [...prev, errorMessage]);\n        setIsTyping(false);\n      }, 1000);\n    }\n  };\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const handleSpeakMessage = text => {\n    speakText(text);\n  };\n\n  // For debugging\n  const showAvailableVoices = () => {\n    console.log(\"Available voices:\", voices);\n    alert(`Available voices: ${voices.length}\\n${voices.map(v => v.name).join(', ')}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/deloitte-logo.png\",\n          alt: \"Deloitte Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Deloitte Well-being Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [userRole === 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dashboard-btn\",\n          onClick: () => window.location.href = '/dashboard',\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: showAvailableVoices,\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Debug Voices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'user' ? 'user-message' : 'bot-message'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timestamp\",\n              children: formatTime(message.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), message.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"speak-button\",\n              onClick: () => handleSpeakMessage(message.text),\n              disabled: isSpeaking,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-volume-up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content typing\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: endOfMessagesRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-area\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message here...\",\n        disabled: isTyping\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isTyping || !input.trim(),\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M22 2L11 13\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M22 2L15 22L11 13L2 9L22 2Z\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"GqC24OJQ92eCfcMW30OtmVZW5zM=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","ChatInterface","onLogout","userRole","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","isSpeaking","setIsSpeaking","voices","setVoices","endOfMessagesRef","speechSynthRef","window","speechSynthesis","loadVoices","availableVoices","current","getVoices","length","console","log","onvoiceschanged","undefined","welcomeMessage","text","sender","timestamp","Date","toISOString","speaking","cancel","_endOfMessagesRef$cur","scrollIntoView","behavior","latestMessage","speakText","utterance","SpeechSynthesisUtterance","rate","pitch","volume","preferredVoice","find","voice","name","includes","lang","onstart","onend","onerror","event","error","speak","handleSendMessage","e","preventDefault","trim","userMessage","prev","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","setTimeout","botMessage","errorMessage","formatTime","date","toLocaleTimeString","hour","minute","handleSpeakMessage","showAvailableVoices","alert","map","v","join","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","href","style","marginLeft","index","disabled","ref","onSubmit","type","value","onChange","target","placeholder","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_c","$RefreshReg$"],"sources":["D:/versionnew/project/deloitte-chatbot/src/components/ChatInterface.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './ChatInterface.css';\r\n\r\nconst ChatInterface = ({ onLogout, userRole }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [voices, setVoices] = useState([]);\r\n  const endOfMessagesRef = useRef(null);\r\n  const speechSynthRef = useRef(window.speechSynthesis);\r\n  \r\n  // Initialize speech synthesis and load voices\r\n  useEffect(() => {\r\n    // Function to load and set available voices\r\n    const loadVoices = () => {\r\n      const availableVoices = speechSynthRef.current.getVoices();\r\n      if (availableVoices.length > 0) {\r\n        setVoices(availableVoices);\r\n        console.log(\"Voices loaded:\", availableVoices.length);\r\n      }\r\n    };\r\n    \r\n    // Load voices immediately\r\n    loadVoices();\r\n    \r\n    // Chrome and some browsers need this event to get all voices\r\n    if (speechSynthRef.current.onvoiceschanged !== undefined) {\r\n      speechSynthRef.current.onvoiceschanged = loadVoices;\r\n    }\r\n    \r\n    // Add welcome message\r\n    const welcomeMessage = {\r\n      text: \"Hello! I'm your Deloitte well-being assistant. How are you feeling today?\",\r\n      sender: 'bot',\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    setMessages([welcomeMessage]);\r\n    \r\n    // Cleanup\r\n    return () => {\r\n      if (speechSynthRef.current.speaking) {\r\n        speechSynthRef.current.cancel();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Scroll to bottom and speak new bot messages\r\n  useEffect(() => {\r\n    endOfMessagesRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    \r\n    const latestMessage = messages[messages.length - 1];\r\n    if (latestMessage && latestMessage.sender === 'bot' && !isTyping) {\r\n      speakText(latestMessage.text);\r\n    }\r\n  }, [messages, isTyping]);\r\n  \r\n  const speakText = (text) => {\r\n    if (!text || voices.length === 0) return;\r\n    \r\n    // Cancel any ongoing speech\r\n    if (speechSynthRef.current.speaking) {\r\n      speechSynthRef.current.cancel();\r\n    }\r\n    \r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    \r\n    // Configure voice settings\r\n    utterance.rate = 1.0;\r\n    utterance.pitch = 1.0;\r\n    utterance.volume = 1.0;\r\n    \r\n    // Select a preferred voice\r\n    const preferredVoice = voices.find(voice => \r\n      voice.name.includes('Daniel') || \r\n      voice.name.includes('Samantha') || \r\n      voice.lang === 'en-US'\r\n    );\r\n    \r\n    if (preferredVoice) {\r\n      utterance.voice = preferredVoice;\r\n      console.log(\"Using voice:\", preferredVoice.name);\r\n    } else {\r\n      console.log(\"Using default voice\");\r\n    }\r\n    \r\n    utterance.onstart = () => {\r\n      console.log(\"Speech started\");\r\n      setIsSpeaking(true);\r\n    };\r\n    \r\n    utterance.onend = () => {\r\n      console.log(\"Speech ended\");\r\n      setIsSpeaking(false);\r\n    };\r\n    \r\n    utterance.onerror = (event) => {\r\n      console.error(\"Speech error:\", event);\r\n      setIsSpeaking(false);\r\n    };\r\n    \r\n    speechSynthRef.current.speak(utterance);\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = {\r\n      text: input,\r\n      sender: 'user',\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInput('');\r\n    setIsTyping(true);\r\n\r\n    try {\r\n      // Send message to backend\r\n      const response = await fetch('http://localhost:5000/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ message: input }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      setTimeout(() => {\r\n        const botMessage = {\r\n          text: data.response,\r\n          sender: 'bot',\r\n          timestamp: new Date().toISOString()\r\n        };\r\n        setMessages(prev => [...prev, botMessage]);\r\n        setIsTyping(false);\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      \r\n      setTimeout(() => {\r\n        const errorMessage = {\r\n          text: \"I'm sorry, I'm having trouble connecting to the server. Please try again later.\",\r\n          sender: 'bot',\r\n          timestamp: new Date().toISOString()\r\n        };\r\n        setMessages(prev => [...prev, errorMessage]);\r\n        setIsTyping(false);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const formatTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n  \r\n  const handleSpeakMessage = (text) => {\r\n    speakText(text);\r\n  };\r\n\r\n  // For debugging\r\n  const showAvailableVoices = () => {\r\n    console.log(\"Available voices:\", voices);\r\n    alert(`Available voices: ${voices.length}\\n${voices.map(v => v.name).join(', ')}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"logo\">\r\n          <img src=\"/deloitte-logo.png\" alt=\"Deloitte Logo\" />\r\n          <h1>Deloitte Well-being Assistant</h1>\r\n        </div>\r\n        <div className=\"header-actions\">\r\n          {userRole === 'admin' && (\r\n            <button className=\"dashboard-btn\" onClick={() => window.location.href = '/dashboard'}>\r\n              Dashboard\r\n            </button>\r\n          )}\r\n          <button className=\"logout-btn\" onClick={onLogout}>\r\n            Logout\r\n          </button>\r\n          {/* Debug button */}\r\n          <button onClick={showAvailableVoices} style={{marginLeft: '10px'}}>\r\n            Debug Voices\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"messages-container\">\r\n        {messages.map((message, index) => (\r\n          <div \r\n            key={index} \r\n            className={`message ${message.sender === 'user' ? 'user-message' : 'bot-message'}`}\r\n          >\r\n            <div className=\"message-content\">\r\n              <p>{message.text}</p>\r\n              <div className=\"message-footer\">\r\n                <span className=\"timestamp\">{formatTime(message.timestamp)}</span>\r\n                {message.sender === 'bot' && (\r\n                  <button \r\n                    className=\"speak-button\" \r\n                    onClick={() => handleSpeakMessage(message.text)}\r\n                    disabled={isSpeaking}\r\n                  >\r\n                    <i className=\"fa fa-volume-up\"></i>\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {isTyping && (\r\n          <div className=\"message bot-message\">\r\n            <div className=\"message-content typing\">\r\n              <div className=\"typing-indicator\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div ref={endOfMessagesRef} />\r\n      </div>\r\n      \r\n      <form className=\"input-area\" onSubmit={handleSendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type your message here...\"\r\n          disabled={isTyping}\r\n        />\r\n        <button type=\"submit\" disabled={isTyping || !input.trim()}>\r\n          <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M22 2L11 13\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n            <path d=\"M22 2L15 22L11 13L2 9L22 2Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n          </svg>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}